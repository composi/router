{"version":3,"file":"router.js.map","sources":["../src/index.js"],"sourcesContent":["/**\n * Creates a Router object.\n */\nexport function Router() {\n  let routes = []\n  let map = {}\n  let oldUrl\n\n  class Route {\n    /**\n     * @param {string} path\n     * @param {string} name\n     */\n    constructor(path, name) {\n      this.name = name\n      this.path = path\n      this.keys = []\n      this.fns = []\n      this.params = {}\n      this.pathToRegexp = (path, keys, sensitive, strict) => {\n        if (path instanceof RegExp) return path\n        if (path instanceof Array) path = '(' + path.join('|') + ')'\n        path = path\n          .concat(strict ? '' : '/?')\n          .replace(/\\/\\(/g, '(?:/')\n          .replace(/\\+/g, '__plus__')\n          .replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?/g, function(\n            _,\n            slash,\n            format,\n            key,\n            capture,\n            optional\n          ) {\n            keys.push({ name: key, optional: !!optional })\n            slash = slash || ''\n            return (\n              '' +\n              (optional ? '' : slash) +\n              '(?:' +\n              (optional ? slash : '') +\n              (format || '') +\n              (capture || ((format && '([^/.]+?)') || '([^/]+?)')) +\n              ')' +\n              (optional || '')\n            )\n          })\n          .replace(/([/.])/g, '\\\\$1')\n          .replace(/__plus__/g, '(.+)')\n          .replace(/\\*/g, '(.*)')\n        return new RegExp('^' + path + '$', sensitive ? '' : 'i')\n      }\n      this.regex = this.pathToRegexp(this.path, this.keys, false, false)\n    }\n\n    /**\n     * Adds a handler for \"this\" route.\n     * @param {function} fn\n     * @return {void} undefined\n     */\n    addHandler(fn) {\n      this.fns.push(fn)\n    }\n\n    /**\n     * Removes specific handler for this route.\n     * @param {function} fn\n     * @return {void} undefined\n     */\n    removeHandler(fn) {\n      for (let i = 0, c = this.fns.length; i < c; i++) {\n        let f = this.fns[i]\n        if (fn == f) {\n          this.fns.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    /**\n     * Executes this route with specified params.\n     *\n     * @param {Object<string, any>} params\n     * @return {boolean} boolean\n     */\n    run(params) {\n      for (let i = 0, c = this.fns.length; i < c; i++) {\n        if (this.fns[i].apply(this, params) === false) return false\n      }\n      return true\n    }\n\n    /**\n     * Tests a path of this route and runs if it's was successful.\n     * @param {string} path\n     * @param {Object<string, any>} params\n     * @return {boolean} boolean\n     */\n    match(path, params) {\n      let m = this.regex.exec(path)\n      if (!m) return false\n      for (let i = 1, len = m.length; i < len; ++i) {\n        let key = this.keys[i - 1]\n        let val = typeof m[i] == 'string' ? decodeURIComponent(m[i]) : m[i]\n        if (key) {\n          this.params[key.name] = val\n        }\n        params.push(val)\n      }\n      return true\n    }\n  }\n\n  /**\n   * This is the main constructor for router object.\n   * Creates a route or navigates it if second parameter is empty.\n   *\n   * @param {Object<string,any>[]} path The path to register or to navigate.\n   * @returns {void} undefined\n   */\n  const router = path => {\n    let addHandler = (path, fn) => {\n      if (!map[path]) {\n        map[path] = new Route(path, name)\n        routes.push(map[path])\n      }\n      map[path].addHandler(fn)\n    }\n    if (Array.isArray(path)) {\n      path.map(route => {\n        addHandler(route.path, route.action)\n      })\n      router.reload()\n    } else {\n      console.error(\n        'Composi router expects an array of objects with path and action properties.'\n      )\n    }\n  }\n\n  /**\n   * Removes specified handler for specified path.\n   * Remeber that: one path can have multiple handlers/callbacks functions.\n   * You should specify the exact object that refers to the handler.\n   *\n   * @param {string} path target path to remove.\n   * @param {Function} fn handler function.\n   * @return {void} undefined\n   */\n  router.remove = (path, fn) => {\n    let route = map[path]\n    if (!route) return\n    if (!fn) {\n      delete map[path]\n    } else {\n      route.removeHandler(fn)\n    }\n  }\n\n  /**\n   * Removes all handlers and routes.\n   *\n   * @return {void} undefined\n   */\n  router.removeAll = () => {\n    map = {}\n    routes = []\n    oldUrl = ''\n  }\n\n  /**\n   * Navigates current route to desired one\n   *\n   * @param  {string} path target path to navigate\n   * @return {void} undefined\n   */\n  router.navigate = path => {\n    window.location.hash = path\n  }\n\n  /**\n   * Get the location hash.\n   * @return {string} string\n   */\n  const getHash = () => window.location.hash.substring(1)\n\n  /**\n   * Checks to see if a hash matches a route.\n   * @param {string} hash\n   * @param {Object<string, any>} route\n   */\n  const checkRoute = (hash, route) => {\n    let params = []\n    if (route.match(hash, params)) {\n      return route.run(params) !== false ? 1 : 0\n    }\n    return -1\n  }\n\n  /**\n   * Check whether location hash has changes\n   */\n  const hashChanged = (router.reload = () => {\n    let hash = getHash()\n    for (let i = 0, c = routes.length; i < c; i++) {\n      let route = routes[i]\n      let state = checkRoute(hash, route)\n      if (state === 1) {\n        // route processed:\n        oldUrl = hash\n        break\n      } else if (state === 0) {\n        // route rejected:\n        router.navigate(oldUrl)\n        break\n      }\n    }\n  })\n\n  window.addEventListener('hashchange', hashChanged, false)\n  oldUrl = getHash()\n\n  window['router'] = router\n\n  return router\n}\n"],"names":["Router","oldUrl","routes","map","Route","constructor","path","name","keys","fns","params","pathToRegexp","sensitive","strict","RegExp","Array","join","concat","replace","_","slash","format","key","capture","optional","push","regex","addHandler","fn","removeHandler","f","i","c","length","splice","run","apply","match","m","exec","len","val","decodeURIComponent","router","isArray","route","action","reload","console","error","remove","removeAll","navigate","window","location","hash","getHash","substring","checkRoute","hashChanged","state","addEventListener"],"mappings":"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"}